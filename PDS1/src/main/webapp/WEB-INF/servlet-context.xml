<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>
	
	<context:component-scan base-package="com.test.pds" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/pds?useUnicode=true&amp;characterEncoding=utf8"/>
        <property name="username" value="root"/>
        <property name="password" value="java0000"/>
    </bean>
    
      <!-- 팩토리 가기전에 여기에서 connection을 가로채서 트랜잭션처리를 전부한다. commit and rollback -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven />
    <tx:annotation-driven proxy-target-class="true"/>
    
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="mapperLocations">
            <list>
                <value>classpath:com/test/pds/article/service/ArticleMapper.xml</value>
				<value>classpath:com/test/pds/article/service/ArticleFileMapper.xml</value>
                <value>classpath:com/test/pds/resume/service/ResumeMapper.xml</value>
                <value>classpath:com/test/pds/resume/service/ResumeFileMapper.xml</value>
                <value>classpath:com/test/pds/board/service/BoardMapper.xml</value>
                <value>classpath:com/test/pds/board/service/BoardFileMapper.xml</value>
               <!--  <value>classpath:com/test/pds/notice/service/NoticeMapper.xml</value>
                <value>classpath:com/test/pds/notice/service/NoticeFileMapper.xml</value> -->
                <value>classpath:com/test/pds/gallery/service/GalleryMapper.xml</value>
                <value>classpath:com/test/pds/gallery/service/GalleryFileMapper.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
	
	
	
</beans>
